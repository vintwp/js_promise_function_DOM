{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","e","tagName","id","printMessage","message","messageElement","document","createElement","classList","add","innerHTML","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,SAAAK,GAClCH,EAEaF,sBAAAA,OAAAA,EACPD,gCAAAA,OAAAA,EAAQO,QAAgBP,UAAAA,OAAAA,EAAQQ,GAHtC,oBAUN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAiBC,SAASC,cAAc,OAE9CF,EAAeG,UAAUC,IAAI,WAC7BJ,EAAeK,UAAkBN,MAAAA,OAAAA,EAAjC,QACAE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfrB,QAAAA,EACAU,aAAAA","file":"main.bd5fdb8f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, e => {\n      resolve(\n        `\n          It was ${eventName} on the element:\n          ${element.tagName}, id: ${element.id}.\n        `\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const messageElement = document.createElement('div');\n\n  messageElement.classList.add('message');\n  messageElement.innerHTML = `<p>${message}</p>`;\n  document.body.append(messageElement);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}